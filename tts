#!/usr/bin/env python3
"""
ElevenLabs TTS Wrapper Script

Automatically extracts Firebase refresh token and runs TTS client.
Makes it easy to use without typing the long token every time.

Usage:
  ./tts --voice-id "nPczCjzI2devNBz1zQrb" --text "Hello world" --play
  ./tts --list-voices
  ./tts --text "Test" --method reader --play
"""

import sys
import subprocess
from pathlib import Path

def get_refresh_token():
    """Get refresh token from cache or flows"""
    try:
        result = subprocess.run([
            sys.executable, 'get_refresh_token.py'
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        
        if result.returncode == 0 and result.stdout.strip():
            return result.stdout.strip()
    except:
        pass
    
    return None

def get_app_check_token():
    """Get xi-app-check-token from cache or flows"""
    try:
        result = subprocess.run([
            sys.executable, 'get_app_check_token.py'
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        if result.returncode == 0 and result.stdout.strip():
            return result.stdout.strip()
    except:
        pass
    return None

def main():
    # Get refresh token
    refresh_token = get_refresh_token()
    
    if not refresh_token:
        print("‚ùå No Firebase refresh token found!")
        print("üí° Extract tokens first:")
        print("   python extract_tokens.py flows.elevenlabsio")
        print("   # or run the TTS client manually once to cache tokens")
        sys.exit(1)
    
    # Optional App Check token
    app_check_token = get_app_check_token()
    # Optional Device ID
    device_id = None
    try:
        result = subprocess.run([
            sys.executable, 'get_device_id.py'
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        if result.returncode == 0 and result.stdout.strip():
            device_id = result.stdout.strip()
    except:
        pass

    # Build command
    cmd = [
        sys.executable, 
        'elevenlabs_tts_client.py',
        '--firebase-refresh-token', refresh_token
    ]
    if app_check_token:
        cmd.extend(['--app-check-token', app_check_token])
    if device_id:
        cmd.extend(['--device-id', device_id])
    
    # Add all other arguments
    cmd.extend(sys.argv[1:])
    
    # Run the TTS client
    try:
        subprocess.run(cmd, check=True)
    except subprocess.CalledProcessError as e:
        sys.exit(e.returncode)
    except KeyboardInterrupt:
        print("\nüõë Interrupted by user")
        sys.exit(1)

if __name__ == "__main__":
    main()
